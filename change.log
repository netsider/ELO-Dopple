<br/><strong>Known Bugs to Fix (NodeJS version):</strong><br/>
• Change lines 151-170 so it doesn't use same variable checkbox is setting, and then change EJS file to reflect that (make form display checked checkbox if playerArray[0].lockPlayer = 1).<br>
• Change resetArray into a boolean, since there's no other elements anymore.<br>
• Make it so anything locking or getting the last round's players, gets the last players from same hidden form element.<br>
• Make array numbers lower, so there's no blank values.<br>
• Change name of app.post("/node-dopple-main", function() so that it doesn't have same name as EJS file.<br>
• <strike>Cleanup checkbox and reset button logic</strike>.<br>

<br/><strong>Known Bugs to Fix (non-NodeJS versions):</strong><br/>
• <strike>Find out why/when D.txt is being created by error, or prevent it from being created as a temp. fix.</strike> <strong>(DONE - 8/20/2019)</strong><br/>
• <strike>Find out why array is coming through as 10 elements instead of just two (with each letter per numbered array).</strike><strong>(DONE - 8/21/2019)<br/>
• <strike>Although understood/solved, keep looking for better solution to POST/Array error (found in Bugs folder), so any format/form of players will work, and not just single/double digit players.</strike> (DONE - 8/22/2019)<br/>

<br/><strong>Small Changes:</strong><br/>
• Create simple form for ELO5000 to change max score.<br/>
• Move ELO5000 to own repo?<br/>
• See what happens when you take the /1 part out (see if it becomes a non-decimal).<br/>
• Modulize this as much as possible, in preparation for further versions.<br/>
• Make "true" player indicators cosmetically better.<br/>
• Make "true" player indicators use JS instead of PHP.<br/>
• Move all styling to separate file.<br/>
• Use Ajax for reset and/or display scoreboard.<br/>
• Add times chosen to scoreboard.<br/>
• Add % and # of players who choose Player 1 versus 2 (another metric to compare the ELO function to).<br/>
• <strike>Change function so it'll accept min/max ELO score for Player B.</strike> (DONE 9/9/2019)<br/>
• <strike>Create readme.md for ELO5000.<strike> (DONE 9/9/2019)<br/>
• <strike>Make function from score distribution part, like with first part.</strike> (DONE - 8/27/2019)<br/>
• <strike>Add score distribution part (2nd half of formula) to ELO.php.</strike> (DONE - 8/27/2019)<br/>
• <strike>Add simple form validation to prevent injection attacks, just in case.</strike> (DONE - 8/23/2019)<br/>
• <strike>Make this version handle non-doppleganger players, or make that version a separate file.</strike> (DONE - 9/25/2019)<br/>
• <strike>Change this so it locks both players instead of just designated player</strike> (DONE - 9/25/2019)<br/>
• <strike>Use JS to make checkbox automatically check after selecting something from the dropdown next to it.</strike> <strong>(DONE - 8/19/2019)</strong><br/>
• <strike>See if negative numbers affects FIDE implementation of ELO.</strike> <strong>(Solved, see "What I've Learned")</strong><br/>
• <strike>Create dropdown box to select, and limit, number of players.</strike> <strong>(DONE - ~8/18/2019)</strong><br />
• <strike>Finish separate scoreboard.</strike> <strong>(DONE - 8/12/2019)</strong><br />
• <strike>Add more players.</strike> <strong>(DONE ~8/18/2019)</strong><br />
• <strike>Add thing so prediction isn't displayed until after user chooses, or so there's an option for the user to not see it.</strike> <strong>(DONE - 8/12/2019)</strong><br/>
• <strike>Creating a little CSS for cosmetic purposes, but not much since I want to modernize it more anyway.</strike> <strong>(DONE ~8/18/2019)</strong><br />
• <strike>Add Simple Counter to see how many times each was chosen before reset, and add corresponding code to reset function.</strike> <strong>(DONE ~8-18-2019)</strong><br/>
• <strike>Add hints for players, in case they don't know their names (what movie they're from, etc.)</strike> <strong>(DONE ~8/18/2019)</strong><br/>

<br/><strong>Major Revisions and Other Versions:</strong><br/>
• Simple form to calculate two players' ELO rating, and score.<br/>
• Mobile version, using front-end framework.<br/>
• Scalable version.<br/>
• Database-backed version.<br/>
• <strike>NodeJS version, to see how this would work differently.<br /></strike>
• Python version, to see how this would work differently.<br />
• Explore additional versions (serverless?). <br />
• <strike>Possible version that uses FIDE's implementation of ELO</strike><strong> (DONE - 8/7/2019).</strong>.<br />
• <strike>Simple PHP script to calculate how many games it takes to reach a certain score.</strike>  (DONE - 9/7/2019).<br/>
• <strike>Doppleganger version, and thinking about how to implement that in current version.</strike> <strong>(DONE)</strong><br/>